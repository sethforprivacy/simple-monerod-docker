name: "Update Ubuntu when ubuntu.Dockerfile is changed"
# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
    - main
    paths:
    - 'ubuntu.Dockerfile'
jobs:
  rebuild-container:
    name: "Rebuild Container with the latest base image"
    runs-on: ubuntu-latest
    steps:
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
        with:
          platforms: linux/amd64,linux/arm64
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Login to DockerHub
        uses: docker/login-action@v2.0.0 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        name: Build x86_64 image
        id: docker_build_amd64
        uses: docker/build-push-action@v3.0.0
        with:
          push: false
          load: true
          file: ./ubuntu.Dockerfile
          platforms: linux/amd64
          tags: simple-monerod:ubuntu-amd64
      - 
        name: x86_64 image digest
        run: echo ${{ steps.docker_build_amd64.outputs.digest }}
      - 
        name: Test-run x84_64 image
        run: |
          docker run --rm simple-monerod:ubuntu-amd64 &
          PID=$!
          sleep 60
          kill -SIGINT $PID # this will return a non-zero exit code if the container dies early on
      - 
        name: Build and push to Docker Hub and Github Packages Docker Registry
        id: docker_build_push
        uses: docker/build-push-action@v3.0.0
        with:
          push: true
          file: ./ubuntu.Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/simple-monerod:ubuntu
            ${{ secrets.DOCKER_USERNAME }}/simple-monerod:ubuntu
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
      - 
        name: Multi-arch image digest
        run: echo ${{ steps.docker_build_push.outputs.digest }}
