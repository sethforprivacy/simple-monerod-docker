name: "Update image when Dockerfile is changed"
# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
    - main
    paths:
    - 'Dockerfile'
jobs:
  rebuild-container:
    name: "Rebuild Container with the latest base image"
    runs-on: ubuntu-latest
    steps:
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2.0.0 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Login to DockerHub
        uses: docker/login-action@v2.0.0 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Checkout repository
        uses: actions/checkout@v3
      - 
        name: Get Monero Release Tag
        id: get_tag
        run: echo "::set-output name=tag::$(awk -F "=" '/MONERO_BRANCH=/ {print $2}' Dockerfile)"
      - 
        name: Build and push to Docker Hub and Github Packages Docker Registry
        id: docker_build
        uses: docker/build-push-action@v3.0.0
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/simple-monerod:latest
            ghcr.io/${{ github.repository_owner }}/simple-monerod:alpine
            ghcr.io/${{ github.repository_owner }}/simple-monerod:${{ steps.get_tag.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/simple-monerod:latest
            ${{ secrets.DOCKER_USERNAME }}/simple-monerod:alpine
            ${{ secrets.DOCKER_USERNAME }}/simple-monerod:${{ steps.get_tag.outputs.tag }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
      - 
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
